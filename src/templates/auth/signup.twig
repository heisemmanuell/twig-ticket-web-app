{% extends "base.twig" %}

{% block title %}Sign Up - Ticket Web App{% endblock %}

{% block content %}
<div class="min-h-screen flex flex-col justify-center py-12 sm:px-6 lg:px-8 bg-gradient-to-br from-blue-50 to-indigo-100">
  <div class="sm:mx-auto sm:w-full sm:max-w-md">
    <h2 class="mt-6 text-center text-3xl font-extrabold text-gray-900">
      Create your account
    </h2>
    <p class="mt-2 text-center text-sm text-gray-600">
      Or
      <a href="/auth/login" class="font-medium text-indigo-600 hover:text-indigo-500">
        sign in to existing account
      </a>
    </p>
  </div>

  <div class="mt-8 sm:mx-auto sm:w-full sm:max-w-md">
    <div class="py-8 px-4 shadow sm:rounded-lg sm:px-10">
      <form id="signupForm" class="space-y-6" action="#" method="POST">
        <div>
          <div class="">
            <input
              id="name"
              name="name"
              type="text"
              autocomplete="name"
              required
              class="appearance-none block w-full px-3 py-2 border border-gray-300 rounded-md placeholder-gray-400 bg-gradient-to-br from-blue-50 to-indigo-100 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm"
              placeholder="Full name"
            />
          </div>
          <p id="nameError" class="mt-1 text-sm text-red-600 hidden"></p>
        </div>

        <div>
          <div class="">
            <input
              id="email"
              name="email"
              type="email"
              autocomplete="email"
              required
              class="appearance-none block w-full px-3 py-2 border border-gray-300 rounded-md placeholder-gray-400 bg-gradient-to-br from-blue-50 to-indigo-100 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm"
              placeholder="Email address"
            />
          </div>
          <p id="emailError" class="mt-1 text-sm text-red-600 hidden"></p>
        </div>

        <div>
          <div class="">
            <input
              id="password"
              name="password"
              type="password"
              autocomplete="new-password"
              required
              class="appearance-none block w-full px-3 py-2 border border-gray-300 rounded-md placeholder-gray-400 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm bg-gradient-to-br from-blue-50 to-indigo-100"
              placeholder="Password"
            />
          </div>
          <p id="passwordError" class="mt-1 text-sm text-red-600 hidden"></p>
        </div>

        <div>
          <div class="">
            <input
              id="confirmPassword"
              name="confirmPassword"
              type="password"
              autocomplete="new-password"
              required
              class="appearance-none block w-full px-3 py-2 border border-gray-300 rounded-md placeholder-gray-400 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm bg-gradient-to-br from-blue-50 to-indigo-100"
              placeholder="Confirm Password"
            />
          </div>
          <p id="confirmPasswordError" class="mt-1 text-sm text-red-600 hidden"></p>
        </div>

        <div>
          <button
            type="submit"
            class="group relative w-full flex justify-center py-2 px-4 border border-transparent text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500"
          >
            Create Account
          </button>
        </div>
      </form>
    </div>
  </div>
</div>

<!-- Toast Notification -->
<div id="toast" class="fixed bottom-4 right-4 bg-green-500 text-white px-4 py-2 rounded-md shadow-lg hidden">
  <p id="toastMessage"></p>
</div>

<script>
  // Form validation and submission
  document.getElementById('signupForm').addEventListener('submit', function(e) {
    e.preventDefault();

    const name = document.getElementById('name').value.trim();
    const email = document.getElementById('email').value.trim();
    const password = document.getElementById('password').value.trim();
    const confirmPassword = document.getElementById('confirmPassword').value.trim();
    let isValid = true;

    // Clear previous errors
    document.getElementById('nameError').classList.add('hidden');
    document.getElementById('emailError').classList.add('hidden');
    document.getElementById('passwordError').classList.add('hidden');
    document.getElementById('confirmPasswordError').classList.add('hidden');
    hideToast();

    // Validate name
    if (!name || name.length < 2) {
      document.getElementById('nameError').textContent = 'Name must be at least 2 characters long.';
      document.getElementById('nameError').classList.remove('hidden');
      isValid = false;
    }

    // Validate email
    const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
    if (!email || !emailRegex.test(email)) {
      document.getElementById('emailError').textContent = 'Please enter a valid email address.';
      document.getElementById('emailError').classList.remove('hidden');
      isValid = false;
    }

    // Validate password
    if (!password || password.length < 6) {
      document.getElementById('passwordError').textContent = 'Password must be at least 6 characters long.';
      document.getElementById('passwordError').classList.remove('hidden');
      isValid = false;
    }

    // Validate confirm password
    if (password !== confirmPassword) {
      document.getElementById('confirmPasswordError').textContent = 'Passwords do not match.';
      document.getElementById('confirmPasswordError').classList.remove('hidden');
      isValid = false;
    }

    if (!isValid) return;

    // Check if user already exists
    const users = JSON.parse(localStorage.getItem('ticketapp_users') || '[]');
    const existingUser = users.find(u => u.email === email);

    if (existingUser) {
      showToast('An account with this email already exists.');
      return;
    }

    // Create new user
    const newUser = {
      id: Date.now().toString(),
      name: name,
      email: email,
      password: password
    };

    users.push(newUser);
    localStorage.setItem('ticketapp_users', JSON.stringify(users));

    // Set session
    localStorage.setItem('ticketapp_session', JSON.stringify({
      id: newUser.id,
      name: newUser.name,
      email: newUser.email
    }));

    // Redirect to dashboard
    window.location.href = '/dashboard';
  });

  function showToast(message) {
    document.getElementById('toastMessage').textContent = message;
    document.getElementById('toast').classList.remove('hidden');
    setTimeout(hideToast, 3000);
  }

  function hideToast() {
    document.getElementById('toast').classList.add('hidden');
  }
</script>
{% endblock %}